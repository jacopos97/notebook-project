<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.examples</groupId>
	<artifactId>notebook</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<url>com.examples.notebook</url>

	<name>notebook</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>17</maven.compiler.source>
		<maven.compiler.target>17</maven.compiler.target>
		<junit.version>4.13</junit.version>
		<assertj-swing.version>3.17.1</assertj-swing.version>
		<mockito.version>5.4.0</mockito.version>
		<mongo-driver.version>3.12.14</mongo-driver.version>
		<logback.version>1.4.8</logback.version>
		<commons-validator.version>1.7</commons-validator.version>
		<log4j.version>2.20.0</log4j.version>
		<picocli.version>4.7.3</picocli.version>
		<mysql-connector.version>8.0.26</mysql-connector.version>

		<surefire.version>3.1.2</surefire.version>
		<clean-plugin.version>3.3.1</clean-plugin.version>
		<resources-plugin.version>3.3.1</resources-plugin.version>
		<compiler-plugin.version>3.11.0</compiler-plugin.version>
		<jar-plugin.version>3.3.0</jar-plugin.version>
		<site-plugin.version>4.0.0-M9</site-plugin.version>
		<jacoco.version>0.8.10</jacoco.version>
		<coveralls.version>4.3.0</coveralls.version>
		<jaxb-api.version>2.3.1</jaxb-api.version>
		<pitest.version>1.14.1</pitest.version>
		<sonar.version>3.9.1.2184</sonar.version>
		<build-helper.version>3.4.0</build-helper.version>
		<failsafe.version>3.1.2</failsafe.version>
		<docker-plugin.version>0.43.0</docker-plugin.version>
		<assembly-plugin.version>3.6.0</assembly-plugin.version>
		<exec-plugin.version>3.1.0</exec-plugin.version>

		<mysql.log>MySQL init process done. Ready for start up.</mysql.log>
		<jvm.argLine>--add-opens java.base/java.util=ALL-UNNAMED</jvm.argLine>

		<sonar.issue.ignore.multicriteria>e11,e12</sonar.issue.ignore.multicriteria>
		<sonar.issue.ignore.multicriteria.e11.ruleKey>
			java:S2699
		</sonar.issue.ignore.multicriteria.e11.ruleKey>
		<sonar.issue.ignore.multicriteria.e11.resourceKey>
			**/NotebookSwingViewTest.java
		</sonar.issue.ignore.multicriteria.e11.resourceKey>
		<sonar.issue.ignore.multicriteria.e12.ruleKey>
			java:S2077
		</sonar.issue.ignore.multicriteria.e12.ruleKey>
		<sonar.issue.ignore.multicriteria.e12.resourceKey>
			**/*.java 
		</sonar.issue.ignore.multicriteria.e12.resourceKey>

		<sonar.coverage.exclusions>
			**/app/*.*,
			**/model/*.*,
			**/sql/*.*
		</sonar.coverage.exclusions>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-swing-junit</artifactId>
			<version>${assertj-swing.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
			<version>${mongo-driver.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-validator</groupId>
			<artifactId>commons-validator</artifactId>
			<version>${commons-validator.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>info.picocli</groupId>
			<artifactId>picocli</artifactId>
			<version>${picocli.version}</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql-connector.version}</version>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${clean-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${resources-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${compiler-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${jar-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${assembly-plugin.version}</version>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>single</goal>
							</goals>
							<configuration>
								<descriptorRefs>
									<descriptorRef>jar-with-dependencies</descriptorRef>
								</descriptorRefs>
								<archive>
									<manifest>
										<mainClass>
											com.examples.notebook.app.NotebookApp</mainClass>
									</manifest>
								</archive>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${surefire.version}</version>
					<configuration>
						<argLine>${argLine} ${jvm.argLine}</argLine>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>${surefire.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					<version>${site-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco.version}</version>
					<configuration>
						<excludes>
							<exclude>**/Note.*</exclude>
							<exclude>**/app/*.*</exclude>
							<exclude>**/NotesMySqlRepository.*</exclude>
						</excludes>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>prepare-agent</goal>
								<goal>report</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.eluder.coveralls</groupId>
					<artifactId>coveralls-maven-plugin</artifactId>
					<version>${coveralls.version}</version>
					<dependencies>
						<dependency>
							<groupId>javax.xml.bind</groupId>
							<artifactId>jaxb-api</artifactId>
							<version>${jaxb-api.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.pitest</groupId>
					<artifactId>pitest-maven</artifactId>
					<version>${pitest.version}</version>
					<configuration>
						<targetClasses>
							<param>com.examples.notebook.controller.*</param>
						</targetClasses>
						<targetTests>
							<param>
								com.examples.notebook.controller.NotebookControllerTest
							</param>
						</targetTests>
						<mutators>
							<mutator>DEFAULTS</mutator>
						</mutators>
						<mutationThreshold>100</mutationThreshold>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>${sonar.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>${build-helper.version}</version>
				<executions>
					<execution>
						<id>add-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/it/java</source>
								<source>src/e2e/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${failsafe.version}</version>
				<configuration>
					<argLine>${argLine} ${jvm.argLine}</argLine>
					<systemPropertyVariables>
						<mongo.port>${mongo.port}</mongo.port>
						<mysql.port>${mysql.port}</mysql.port>
					</systemPropertyVariables>
				</configuration>
				<executions>
					<execution>
						<id>default-it</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
					<execution>
						<id>e2e-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<excludes>
								<exclude>**/*IT.java</exclude>
							</excludes>
							<includes>
								<include>**/*E2E.java</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${docker-plugin.version}</version>
				<configuration>
					<images>
						<image>
							<name>mongo:4.4.3</name>
							<run>
								<ports>
									<port>mongo.port:27017</port>
								</ports>
								<wait>
									<http>
										<url>http://localhost:${mongo.port}</url>
										<method>GET</method>
										<status>200</status>
									</http>
									<time>30000</time>
								</wait>
							</run>
						</image>
						<image>
							<name>mysql:5.7</name>
							<run>
								<ports>
									<port>mysql.port:3306</port>
								</ports>
								<wait>
									<log>${mysql.log}</log>
									<time>30000</time>
								</wait>
								<env>
									<MYSQL_ROOT_PASSWORD>secret</MYSQL_ROOT_PASSWORD>
									<MYSQL_USER>user</MYSQL_USER>
									<MYSQL_PASSWORD>password</MYSQL_PASSWORD>
								</env>
							</run>
						</image>
					</images>
				</configuration>
				<executions>
					<execution>
						<id>docker-start</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>docker-stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>coveralls</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.eluder.coveralls</groupId>
						<artifactId>coveralls-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>verify</phase>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>